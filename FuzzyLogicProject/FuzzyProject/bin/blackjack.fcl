

FUNCTION_BLOCK blackjack	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	hand : REAL;
	dealerhand : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	action : REAL;
END_VAR

FUZZIFY hand			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM poor := (2, 1) (12, 0) ; 
	TERM good := (12,0) (14,1) (15,1) (17,0);
	TERM excellent := (17, 0) (21, 1);
END_FUZZIFY

FUZZIFY dealerhand			// Fuzzify input variable 'food': { 'rancid', 'delicious' }
	TERM poor := (2, 1) (7, 0) ; 
	TERM good := (7,0) (8,1) (9,0)
	TERM excellent := (9, 0) (11, 1);
END_FUZZIFY

DEFUZZIFY action			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM stay := (0,12) (21,1);
	TERM hit := (2,1) (20,0);
	TERM double := (9,0) (10,1) (11,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

    RULE 1 : IF hand IS poor AND dealerhand IS poor THEN action IS double;
    RULE 2 : IF hand IS poor AND dealerhand IS good THEN action IS hit;
    RULE 3 : IF hand IS poor AND dealerhand IS excellent THEN action IS hit;
    RULE 4 : IF hand IS good AND dealerhand IS poor THEN action IS stay;
	RULE 5 : IF hand IS good AND dealerhand IS good THEN action IS hit;
	RULE 6 : IF hand IS good AND dealerhand IS excellent THEN action IS hit;
    RULE 7 : IF hand IS excellent AND dealerhand IS poor THEN action IS stay;
	RULE 8 : IF hand IS excellent AND dealerhand IS good THEN action IS hit;
	RULE 9 : IF hand IS excellent AND dealerhand IS excellent THEN action IS hit;
END_RULEBLOCK

END_FUNCTION_BLOCK

